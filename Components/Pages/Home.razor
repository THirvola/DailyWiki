@using System.Text.Json
@using DailyWiki.Scripts
@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

@if (category.Equals("None"))
{
    @foreach (string cat in categories)
    {
        <button @onclick="(async () => { await PickCategory(cat);})">@cat</button>
    }
}
else
{
    <h1>Daily Wikipedia page guessing game</h1>
    <h2>Category: @category</h2>
    <h2>Title: @title</h2>
    <h2>Tries: @attempts</h2>
    <h3>hint 1: @hint1</h3>
    <p>hint 2:</p> @hint2

    @foreach (string option in options)
    {
        <button @onclick="(() => {PickAnswer(option);})">@option</button>
    }
}


@code{
    int attempts = 0;
    string title = "None";
    string pageId = "0";
    string hint1 = "None";
    string category = "None";
    List<string> categories = new List<string>() { "Physics", "Countries in Europe", "States of the United States", "Chemical elements", "Fish common names", "Chinese inventios" };
    List<string> options = new List<string>();
    MarkupString hint2 = (MarkupString)"None";

    /// <summary>
    /// Ran automatically on initialization. Used for initializing the page
    /// </summary>
    private async Task InitializeGame()
    {
        if (title.Equals("None"))
        {
            options = await WikipediaAPI.FetchPagesInCategory(category);
            title = options[new System.Random(GameEngine.GetRandomSeed()).Next(0, options.Count)];
        }

        try
        {
            var client = new HttpClient();
            //GET
            System.Diagnostics.Debug.WriteLine(title);
            HttpResponseMessage resp = await client.GetAsync("https://en.wikipedia.org/w/api.php?action=parse&format=json&page=" + title + "&formatversion=2");
            string respString = await resp.Content.ReadAsStringAsync();

            //Parsing response
            Stream responseStream = resp.Content.ReadAsStream();
            JsonElement jsonRoot = JsonDocument.Parse(responseStream).RootElement;
            JsonElement parseResult = jsonRoot.GetProperty("parse");
            hint1 = GameEngine.CensorHint(title, parseResult.GetProperty("properties").GetProperty("wikibase-shortdesc").GetString()!);
            hint2 = (MarkupString)GameEngine.CensorHint(title, WikipediaAPI.ParseWikipediaMarkup(parseResult.GetProperty("text").GetString()!, true, false));

        }
        catch
        {
            //todo: catch errors

        }
    }

    private void PickAnswer(string answer)
    {
        attempts++;
        if (answer.Equals(title))
            System.Diagnostics.Debug.WriteLine("correct!");
        else
            System.Diagnostics.Debug.WriteLine("wrong!");

    }

    private async Task PickCategory(string categ)
    {
        category = categ;
        await InitializeGame();
    }


}